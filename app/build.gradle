apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.hawk.leetcode"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java {

                // these files with lambda can only build by JAVA1.8+
                exclude 'com/freetymekiyan/algorithms/level/hard/MergeKSortedList.java'
                exclude 'com/freetymekiyan/algorithms/level/hard/PerfectRectangle.java'
                exclude 'com/freetymekiyan/algorithms/level/hard/TheSkylineProblem.java'
                exclude 'com/freetymekiyan/algorithms/level/hard/DesignSearchAutocompleteSystem.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/NonOverlappingIntervals.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/PermutationInString.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/MeetingRooms2.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/AccountsMerge.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/FindKPairsWithSmallestSums.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/NetworkDelayTime.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/FindRightInterval.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/SerializeAndDeserializeBst.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/SubArraySumEqualsK.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/MergeIntervals.java'
                exclude 'com/freetymekiyan/algorithms/level/easy/IntersectionofTwoArrays2.java'
                exclude 'com/freetymekiyan/algorithms/level/easy/MeetingRooms.java'
                exclude 'com/freetymekiyan/algorithms/level/easy/IntersectionofTwoArrays.java'
                exclude 'com/freetymekiyan/algorithms/other/MedianOfNSortedArrays.java'
                exclude 'com/freetymekiyan/algorithms/other/UserSessions.java'
                exclude 'com/freetymekiyan/algorithms/other/RateLimiter.java'
                exclude 'com/freetymekiyan/algorithms/other/MergeIntervalsToCoverTarget.java'

                // fail at dependency
                exclude 'com/freetymekiyan/algorithms/level/hard/WordLadder2.java'
                exclude 'com/freetymekiyan/algorithms/level/hard/AlienDictionary.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/Combinations.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/Subsets.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/BinaryTreeZigzagLevelOrderTraversal.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/ShortestWordDistance2.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/FactorCombinations.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/CombinationSum3.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/NumberOfCornerRectangles.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/MinimumHeightTrees.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/CourseSchedule.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/GroupAnagrams.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/Subsets2.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/CourseSchedule2.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/BinaryTreeVerticalOrderTraversal.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/FindLeavesOfBinaryTree.java'
                exclude 'com/freetymekiyan/algorithms/level/medium/StrobogrammaticNumber2.java'
                exclude 'com/freetymekiyan/algorithms/level/easy/AverageOfLevelsInBinaryTree.java'
                exclude 'com/freetymekiyan/algorithms/level/easy/BinaryTreeLevelOrderTraversal.java'
                exclude 'com/freetymekiyan/algorithms/other/GraphPaths.java'


            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    // Android test ++++++++++++++++++ https://developer.android.com/training/testing/start/index.html
    // Required for local unit tests (JUnit 4 framework), A JUnit 4-compatible test runner for JAVA.
    testCompile 'junit:junit:4.12'
    // Required for instrumented tests
    // androidTestCompile 'com.android.support.test:runner:1.0.2'
    // Optional -- Mockito framework
    // testCompile 'org.mockito:mockito-core:1.10.19' // https://github.com/mockito/mockito/tree/release/2.x/src/main/java/org/mockito
    // Optional -- Hamcrest library
    // androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    // Optional -- UI testing with Espresso, A UI testing framework; suitable for functional UI testing within an app.
    // androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.2'
    // Optional -- UI testing with UI Automator, A UI testing framework suitable for cross-app functional UI testing between both system and installed apps
    // androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'

}
